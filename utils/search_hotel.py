from rapid_api.request_to_api import request_to_api
from utils.data import get_data
from config_data import config
from loguru import logger
from loader import bot
from handlers.special_heandlers.finish_work import finish_work
import requests
import re
import json


@logger.catch()
def search_hotel(user_id: int, chat_id: int, page_number: int = 1) -> list or None:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–µ–ª–µ–π –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ –∫–∞–∂–¥—ã–π –æ—Ç–µ–ª—å –æ—Ç–¥–µ–ª—å–Ω–æ (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
    —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ id –æ—Ç–µ–ª—è (–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ç–æ))"""
    date_check_in = get_data(user_id, chat_id, 'check_In')
    date_check_out = get_data(user_id, chat_id, 'check_Out')
    num_days = date_check_out - date_check_in
    num_days = num_days.days

    querystring = {"destinationId": f"{get_data(user_id, chat_id, 'destination_Id')}",
                   "pageNumber": str(page_number),
                   "pageSize": f"{get_data(user_id, chat_id, 'num_hotels')}",
                   "checkIn": f"{date_check_in}",
                   "checkOut": f"{date_check_out}",
                   "adults1": "1",
                   "locale": config.LOCALE,
                   "currency": config.CURRENCY}

    if get_data(user_id, chat_id, 'commands') == "bestdeal":
        sort_order = "DISTANCE_FROM_LANDMARK"
        querystring["priceMin"] = get_data(user_id, chat_id, 'price_min')
        querystring["priceMax"] = get_data(user_id, chat_id, 'price_max')

    elif get_data(user_id, chat_id, 'commands') == "lowprice":
        sort_order = "PRICE"

    else:
        sort_order = "PRICE_HIGHEST_FIRST"
    querystring["sortOrder"] = sort_order

    url = "https://hotels4.p.rapidapi.com/properties/list"
    try:
        response = request_to_api(url, querystring)  # –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å

    except requests.exceptions.ConnectTimeout:
        bot.send_message(user_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
        finish_work(user_id, chat_id)

    else:
        pattern = r'(?<="results":).+?(?=,"pagination")'
        find = re.search(pattern, response.text)

        if find:
            data = json.loads(find[0])  # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ JSON —Ñ–æ—Ä–º–∞—Ç
            if data:  # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞—à–µ–ª (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –µ—Å—Ç—å)
                inf_hotel = list()
                for i_data in data:
                    id_hotel = i_data["id"]

                    price = int(i_data["ratePlan"]["price"]["exactCurrent"])
                    text = 'üè® –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è: {name_hotel}\n\n' \
                           '‚≠ê –†–µ–π—Ç–∏–Ω–≥: {rating}\n\n' \
                           'üó∫ –ê–¥—Ä–µ—Å: {street_Address}\n\n' \
                           'üöó –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞ –≥–æ—Ä–æ–¥–∞: {distance}\n\n' \
                           'üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –Ω–æ—á—å: {price} —Ä—É–±\n\n' \
                           'üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_price} —Ä—É–±\n\n' \
                           'üåê –°—Å—ã–ª–∫–∞: {url}'\
                        .format(
                            name_hotel=i_data["name"],
                            rating=i_data["guestReviews"]["rating"] if "guestReviews" in i_data.keys() else '-',
                            street_Address=i_data["address"]["streetAddress"] if "streetAddress" in i_data["address"].keys() else '-',
                            distance=i_data["landmarks"][0]["distance"],
                            price=price,
                            total_price=price * num_days,
                            url="https://www.hotels.com/ho" + str(id_hotel)
                            )

                    inf_hotel.append((text, id_hotel))
                return inf_hotel
            else:
                return None
        else:  # –í –æ—Ç–≤–µ—Ç–µ (–Ω–∞ –∑–∞–ø—Ä–æ—Å "–æ—Ç–µ–ª–µ–π") –Ω–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –∫–ª—é—á–∞ (—Ç.–∫. –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª)
            return None
